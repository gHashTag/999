name: Create/Delete Branch for Pull Request

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  setup:
    name: Setup
    outputs:
      branch: ${{ steps.branch_name.outputs.current_branch }}
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        id: branch_name
        uses: tj-actions/branch-names@v8

  create_neon_branch:
    name: Create Neon Branch
#    outputs: # Эти outputs не используются напрямую дальше, но могут быть полезны для отладки
#      db_url: ${{ steps.create_neon_branch.outputs.db_url }}
#      db_url_with_pooler: ${{ steps.create_neon_branch.outputs.db_url_with_pooler }}
    needs: setup
    if: |
      github.event_name == 'pull_request' && (
      github.event.action == 'synchronize'
      || github.event.action == 'opened'
      || github.event.action == 'reopened')
    runs-on: ubuntu-latest
    permissions: # Добавляем нужные пермиссии для schema-diff-action
      contents: read
      pull-requests: write
    steps:
      - name: Create Neon Branch
        id: create_neon_branch # ID шага, чтобы ссылаться на его outputs
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch_name: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}

      # Пример запуска миграций (раскомментируйте и адаптируйте при необходимости)
      # - name: Run Migrations
      #   run: |
      #     echo "Running migrations (example)..."
      #     # Замените на вашу реальную команду миграции
      #     # npm run db:migrate 
      #     echo "DATABASE_URL will be: ${{ steps.create_neon_branch.outputs.db_url_with_pooler }}"
      #   env:
      #     DATABASE_URL: "${{ steps.create_neon_branch.outputs.db_url_with_pooler }}"

      # Пример публикации разницы схем (раскомментируйте и адаптируйте при необходимости)
      # - name: Post Schema Diff Comment to PR
      #   uses: neondatabase/schema-diff-action@v1
      #   with:
      #     project_id: ${{ vars.NEON_PROJECT_ID }}
      #     # Имя текущей ветки PR, а не основной ветки проекта
      #     main_branch_name: ${{ github.base_ref }} # Или ваша основная ветка, например 'main' или 'develop'
      #     # Имя созданной preview-ветки
      #     compare_branch: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
      #     api_key: ${{ secrets.NEON_API_KEY }}
      #     # Дополнительно: исключить таблицы (например, служебные)
      #     # exclude: |
      #     #   _prisma_migrations
      #     #   spatial_ref_sys
      #     #   pg_*

  delete_neon_branch:
    name: Delete Neon Branch
    needs: setup
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch_name: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }} # Убедимся, что используется правильное имя ветки для удаления
          api_key: ${{ secrets.NEON_API_KEY }} 