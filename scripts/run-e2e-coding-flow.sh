#!/bin/bash
# –ó–∞–ø—É—Å–∫–∞–µ—Ç E2E —Ç–µ—Å—Ç coding-agent-flow.e2e.test.ts –∏ –≤—ã–≤–æ–¥–∏—Ç JSON-—Ä–µ–∑—É–ª—å—Ç–∞—Ç

# Exit immediately if a command exits with a non-zero status.
set -eo pipefail

# --- Configuration ---
TEST_FILE="src/__tests__/e2e/teamLeadAgent.e2e.test.ts"
# TEST_FILE="src/__tests__/e2e/coding-agent-flow.e2e.test.ts" # Example of another test
REPORTER="json"
OUTPUT_FILE="test-results.json"

# --- Main Script ---
echo "üöÄ Starting E2E Test Workflow for ${TEST_FILE}..."

echo "üìÇ Using output file: ${OUTPUT_FILE}"

# Run Bun test with specific parameters
echo "üèÉ Running Bun E2E test..."
# Set environment variable for E2E context
VITEST_E2E=true \
  bun test --isolate --bail "${TEST_FILE}"

EXIT_CODE=$?
echo "üìä Bun test finished with exit code: ${EXIT_CODE}"

# Analyze logs (example)
# echo "üìÑ Analyzing node-app.log..."
# grep -i "error\|warn" node-app.log || echo "  -> No errors or warnings found."

# Check exit code
if [ ${EXIT_CODE} -ne 0 ]; then
  echo "‚ùå E2E test failed."
  exit ${EXIT_CODE}
else
  echo "‚úÖ E2E test passed successfully!"
fi

# –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑ JSON-—Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ -f "${OUTPUT_FILE}" ]; then
  echo "üìÑ Test results (${OUTPUT_FILE}):"
  cat "${OUTPUT_FILE}"
  # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –ø–æ—Å–ª–µ –≤—ã–≤–æ–¥–∞
  # rm "${OUTPUT_FILE}"
else
  echo "‚ö†Ô∏è JSON output file (${OUTPUT_FILE}) not found."
fi

# –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–∫—Ä–∏–ø—Ç —Å –∫–æ–¥–æ–º –≤—ã—Ö–æ–¥–∞ Bun —Ç–µ—Å—Ç–∞
exit ${EXIT_CODE} 