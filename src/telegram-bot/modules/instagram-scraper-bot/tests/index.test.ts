import { describe, it, expect, vi, beforeEach } from "vitest"
import { Telegraf } from "telegraf"
import { setupInstagramScraperBot } from ".."
import type { ScraperBotContext } from "../types"

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à –º–æ–¥—É–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –º–æ–∫–∏
import "./setup"
import { telegrafMocks } from "./setup"

describe("Instagram Scraper Bot Module", () => {
  let bot: Telegraf<ScraperBotContext>

  beforeEach(() => {
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Ç–µ—Å—Ç–æ–º
    bot = new Telegraf<ScraperBotContext>("fake-token")
  })

  it("should register middleware and commands", () => {
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–æ–¥—É–ª—å
    setupInstagramScraperBot(bot, { enableLogging: true })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ middleware –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã
    expect(telegrafMocks.use).toHaveBeenCalledTimes(3)
  })

  it("should register command handlers", () => {
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–æ–¥—É–ª—å
    setupInstagramScraperBot(bot, { enableLogging: false })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã
    expect(telegrafMocks.command).toHaveBeenCalledWith(
      "scraper_projects",
      expect.any(Function)
    )
    expect(telegrafMocks.hears).toHaveBeenCalledWith(
      "üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏",
      expect.any(Function)
    )
  })

  it("should return menu buttons", () => {
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–æ–¥—É–ª—å
    const scraperBot = setupInstagramScraperBot(bot)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
    const buttons = scraperBot.getMenuButtons()
    expect(buttons).toEqual([
      ["üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏", "üîç –°–∫—Ä–∞–ø–∏–Ω–≥ Instagram"],
    ])
  })

  it("should return commands for bot menu", () => {
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–æ–¥—É–ª—å
    const scraperBot = setupInstagramScraperBot(bot)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –∫–æ–º–∞–Ω–¥—ã
    const commands = scraperBot.getCommands()
    expect(commands).toEqual([
      {
        command: "scraper_projects",
        description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ —Å–∫—Ä–∞–ø–µ—Ä–∞",
      },
    ])
  })

  it("should provide a method to enter projects scene", () => {
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–æ–¥—É–ª—å
    const scraperBot = setupInstagramScraperBot(bot)

    // –°–æ–∑–¥–∞–µ–º –º–æ–∫-–∫–æ–Ω—Ç–µ–∫—Å—Ç
    const ctx = {
      scene: {
        enter: vi.fn(),
      },
    } as unknown as ScraperBotContext

    // –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –≤—Ö–æ–¥–∞ –≤ —Å—Ü–µ–Ω—É
    scraperBot.enterProjectsScene(ctx)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω –≤—Ö–æ–¥ –≤ –Ω—É–∂–Ω—É—é —Å—Ü–µ–Ω—É
    expect(ctx.scene.enter).toHaveBeenCalledWith("instagram_scraper_projects")
  })
})
